<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>锁 on</title><link>https://www.guanpj.top/tags/%E9%94%81/</link><description>Recent content in 锁 on</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://www.guanpj.top/tags/%E9%94%81/index.xml" rel="self" type="application/rss+xml"/><item><title>CAS 和 AQS 原理</title><link>https://www.guanpj.top/CAS-%E5%92%8C-AQS-%E5%8E%9F%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.guanpj.top/CAS-%E5%92%8C-AQS-%E5%8E%9F%E7%90%86/</guid><description>CAS 介绍 CAS 英文全称是 Compare-And-Swap，中文叫做“比较并交换”，它是一种思想、一种算法。
在大多数处理器的指令中，都会实现 CAS 相关的指令，这一条指令就可以完成“比较并交换”的操作，也正是由于这是一条（而不是多条）CPU 指令，所以 CAS 相关的指令是具备原子性的，这个组合操作在执行期间不会被打断，这样就能保证并发安全。由于这个原子性是由 CPU 保证的，所以无需我们程序员来操心。
CAS 有三个操作数：内存值 V、预期值 A、要修改的值 B。CAS 最核心的思路就是，仅当预期值 A 和当前的内存值 V 相同时，才将内存值修改为 B。</description></item></channel></rss>