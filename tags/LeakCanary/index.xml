<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>LeakCanary on</title><link>https://www.guanpj.top/tags/LeakCanary/</link><description>Recent content in LeakCanary on</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://www.guanpj.top/tags/LeakCanary/index.xml" rel="self" type="application/rss+xml"/><item><title>LeakCanary 使用及源码解析</title><link>https://www.guanpj.top/LeakCanary-%E4%BD%BF%E7%94%A8%E5%8F%8A%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.guanpj.top/LeakCanary-%E4%BD%BF%E7%94%A8%E5%8F%8A%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/</guid><description>Reference 介绍 Reference 即是我们平时所说的“引用”，与之对应的是一个泛型抽象类。四种引用类型：SoftReference(软引用)、WeakReference(弱引用)、PhantomReference（虚引用）都继承自 Reference。它的声明如下：
1 2 3 4 5 6 7 8 9 10 11 12 13 public abstract class Reference&amp;lt;T&amp;gt; { //引用对象 volatile T referent; //保存即将被回收的Reference对象 final ReferenceQueue&amp;lt;?</description></item></channel></rss>